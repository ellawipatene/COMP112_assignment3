#BlueJ class context
comment0.target=Challenge
comment0.text=Paramterised\ Shapes\:\ draw\ tricolour\ flags\ and\ game\ boards
comment1.params=
comment1.target=void\ doCore()
comment1.text=\ \ \ CORE\n\ asks\ user\ for\ a\ position\ and\ three\ colours,\ then\ calls\ the\n\ drawTriColorFlag\ method,\ passing\ the\ appropriate\ arguments\n
comment10.params=redPosition\ bluePosition\ playerRow\ playerMove\ numDishes
comment10.target=boolean\ redTurn(java.util.ArrayList,\ java.util.ArrayList,\ int,\ java.lang.String,\ int)
comment11.params=spaces\ redPosition\ playerRow
comment11.target=int\ redMove(int,\ java.util.ArrayList,\ int)
comment12.params=redPosition
comment12.target=int\ redHome(int)
comment13.params=spaces\ bluePosition
comment13.target=int\ blueMove(int,\ int)
comment14.params=bluePosition\ numDishes
comment14.target=int\ blueHome(int,\ int)
comment15.params=
comment15.target=int\ getDishes()
comment16.params=
comment16.target=int\ getRows()
comment17.params=numRows
comment17.target=int\ rowInput(int)
comment18.params=
comment18.target=java.lang.String\ userInput()
comment19.params=numDishes
comment19.target=void\ setUpGame(int)
comment2.params=left\ top\ horiz\ stripe1\ stripe2\ stripe3
comment2.target=void\ drawThreeStripeFlag(double,\ double,\ boolean,\ java.awt.Color,\ java.awt.Color,\ java.awt.Color)
comment2.text=\ \ \ CORE\n\ draws\ a\ three\ colour\ flag\ at\ the\ given\ position\ consisting\ of\n\ three\ equal\ size\ stripes\ of\ the\ given\ colors\n\ The\ stripes\ are\ horizontal\ or\ vertical\n\ The\ size\ of\ the\ flag\ is\ specified\ by\ the\ constants\ FLAG_WIDTH\ and\ FLAG_HEIGHT\n
comment20.params=
comment20.target=void\ setupGUI()
comment21.params=args
comment21.target=void\ main(java.lang.String[])
comment3.params=
comment3.target=void\ doCompletion()
comment3.text=\ \ \ COMPLETION\n\ Draws\ a\ pebble\ game\ board\ with\ five\ rows\ of\ increasing\ size\n\ \ \ The\ first\ row\ has\ 6\ dishes,\ the\ second\ has\ 7\ dishes,\ the\ third\ has\ 8,\ etc.\n\ \ \ The\ positions\ of\ the\ red\ and\ blue\ pebbles\ are\ shown\ in\ this\ table\:\n\ \ \ (where\ the\ |'s\ separate\ the\ dishes)\n\ \ \ \ \ |\ \ \ |\ r\ |\ \ \ |\ \ \ |\ \ \ |\ b\ |\n\ \ \ \ \ |\ \ \ |\ b\ |\ r\ |\ \ \ |\ \ \ |\ \ \ |\ \ \ |\n\ \ \ \ \ |\ \ \ |\ \ \ |\ \ \ |\ \ \ |\ \ \ |\ r\ |\ \ \ |\ b\ |\n\ \ \ \ \ |\ b\ |\ \ \ |\ \ \ |\ r\ |\ \ \ |\ \ \ |\ \ \ |\ \ \ |\ \ \ |\n\ \ \ \ \ |\ \ \ |\ \ \ |\ b\ |\ \ \ |\ \ \ |\ \ \ |\ \ \ |\ \ \ |\ \ \ |\ r\ |\n\n\ \ It\ uses\ the\ drawPebbleRow\ method\ which\ draws\ one\ row\ and\ the\ two\ pebbles\ in\ it.\n
comment4.params=rowNum\ numDishes\ pebbleOne\ pebbleTwo\ colour
comment4.target=void\ drawPebbleRow(int,\ int,\ int,\ int,\ boolean)
comment4.text=\ \ \ COMPLETION\n\ Draws\ a\ row\ of\ a\ pebble\ game.\ Parameters\ must\ be\ sufficient\ to\ specify\n\ the\ position\ and\ size\ of\ the\ row,\ and\ which\ dishes\ the\ red\ and\ blue\ pebbles\ are\ in.\n\ Hint\:\ use\ the\ drawRowOutline,\ drawDish\ and\ drawPebble\ methods\!\n
comment5.params=rowNum\ numDishes
comment5.target=void\ drawRowOutline(int,\ int)
comment5.text=\n\ Draws\ the\ outline\ of\ the\ specified\ row\ with\ the\ specified\ number\ of\ dishes.\n\ (rows\ numbered\ from\ 0)\n
comment6.params=rowNum\ dishNum
comment6.target=void\ drawDish(int,\ int)
comment6.text=\n\ Draw\ the\ specified\ dish\ in\ the\ specified\ row\n\ (rows\ and\ dishes\ are\ numbered\ from\ 0)\n
comment7.params=rowNum\ dishNum\ pebbleColor
comment7.target=void\ drawPebble(int,\ int,\ java.awt.Color)
comment7.text=\n\ Draw\ a\ pebble\ in\ specified\ dish\ in\ the\ specified\ row\ with\ the\ specified\ color.\n\ (rows\ and\ dishes\ are\ numbered\ from\ 0)\n
comment8.params=rowNum\ dishNum\ pebbleColor
comment8.target=void\ erasePebble(int,\ int,\ java.awt.Color)
comment9.params=
comment9.target=void\ doChallengeHarder()
numComments=22
